clear
ls
print("hello world")
setwd("~/Documents/ML & DSA/MachineLearning_Practices/projects_R/Regression/multiple_linear_regression")
dataset = read.csv('50_Startups.csv')
View(dataset)
dataset = read.csv('50_Startups.csv')
View(dataset)
# Encoding categorical data
dataset$State = factor(dataset$State,levels = c('New York
','California','Florida'),
labels = c(1,2,3))
dataset = read.csv('50_Startups.csv')
dataset$State = factor(dataset$State,levels = c('New York','California','Florida'),
labels = c(1,2,3))
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(training_set)
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,levels = c('New York','California','Florida'),
labels = c(1,2,3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor = lm(formula = Profit ~ ., data = training_set)
summary(regressor)
View(dataset)
# Predicting the test_set results
y_pred = predict(regressor,newdata = test_set)
y_pred
#Building the optimal model using backward elimination.
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset)
summary(regressor)
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,levels = c('New York','California','Florida'),
labels = c(1,2,3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
#Fitting Multiple Linear Regression to the Training set
#regressor = lm(formula = Profit ~ R.D.Spend
regressor = lm(formula = Profit ~ .,
data = training_set)
# summary(regressor)
# Predicting the test_set results
y_pred = predict(regressor,newdata = test_set)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset)
summary(regressor)
+ Marketing.Spend,
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend,
data = dataset)
summary(regressor)
backwardElimination(training_set, SL)
# Multiple Linear Regression
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,levels = c('New York','California','Florida'),
labels = c(1,2,3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
#Fitting Multiple Linear Regression to the Training set
#regressor = lm(formula = Profit ~ R.D.Spend
regressor = lm(formula = Profit ~ .,
data = training_set)
# summary(regressor)
# Predicting the test_set results
y_pred = predict(regressor,newdata = test_set)
#Building the optimal model using backward elimination.
# regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
#                data = dataset)
# summary(regressor)
#
#
# regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
#                data = dataset)
# summary(regressor)
#
# regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
#                data = dataset)
# summary(regressor)
#
# regressor = lm(formula = Profit ~ R.D.Spend,
#                data = dataset)
# summary(regressor)
# Automatic Backward Elimination
backwardElimination <- function(x, sl) {
numVars = length(x)
for (i in c(1:numVars)){
regressor = lm(formula = Profit ~ ., data = x)
maxVar = max(coef(summary(regressor))[c(2:numVars), "Pr(>|t|)"])
if (maxVar > sl){
j = which(coef(summary(regressor))[c(2:numVars), "Pr(>|t|)"] == maxVar)
x = x[, -j]
}
numVars = numVars - 1
}
return(summary(regressor))
}
SL = 0.05
dataset = dataset[, c(1,2,3,4,5)]
backwardElimination(training_set, SL)
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,levels = c('New York','California','Florida'),
labels = c(1,2,3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
#Fitting Multiple Linear Regression to the Training set
#regressor = lm(formula = Profit ~ R.D.Spend
regressor = lm(formula = Profit ~ .,
data = training_set)
# summary(regressor)
# Predicting the test_set results
y_pred = predict(regressor,newdata = test_set)
backwardElimination <- function(x, sl) {
numVars = length(x)
for (i in c(1:numVars)){
regressor = lm(formula = Profit ~ ., data = x)
maxVar = max(coef(summary(regressor))[c(2:numVars), "Pr(>|t|)"])
if (maxVar > sl){
j = which(coef(summary(regressor))[c(2:numVars), "Pr(>|t|)"] == maxVar)
x = x[, -j]
}
numVars = numVars - 1
}
return(summary(regressor))
}
SL = 0.05
dataset = dataset[, c(1,2,3,4,5)]
backwardElimination(training_set, SL)
# Multiple Linear Regression
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,levels = c('New York','California','Florida'),
labels = c(1,2,3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
#Fitting Multiple Linear Regression to the Training set
#regressor = lm(formula = Profit ~ R.D.Spend
regressor = lm(formula = Profit ~ .,
data = training_set)
# summary(regressor)
# Predicting the test_set results
y_pred = predict(regressor,newdata = test_set)
#Building the optimal model using backward elimination.
# regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
#                data = dataset)
# summary(regressor)
#
#
# regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
#                data = dataset)
# summary(regressor)
#
# regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
#                data = dataset)
# summary(regressor)
#
# regressor = lm(formula = Profit ~ R.D.Spend,
#                data = dataset)
# summary(regressor)
# Automatic Backward Elimination
backwardElimination <- function(x, sl) {
numVars = length(x)
for (i in c(1:numVars)){
regressor = lm(formula = Profit ~ ., data = x)
maxVar = max(coef(summary(regressor))[c(2:numVars), "Pr(>|t|)"])
if (maxVar > sl){
j = which(coef(summary(regressor))[c(2:numVars), "Pr(>|t|)"] == maxVar)
x = x[, -j]
}
numVars = numVars - 1
}
return(summary(regressor))
}
SL = 0.05
dataset = dataset[, c(1,2,3,4,5)]
backwardElimination(training_set, SL)
